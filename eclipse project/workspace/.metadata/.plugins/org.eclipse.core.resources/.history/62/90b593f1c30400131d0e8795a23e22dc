/*
 * 
 */
package farrusco.diagram.providers;

/**
 * @generated
 */
public class FarruscoElementTypes {

		/**
 * @generated
 */
private FarruscoElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.jface.resource.ImageRegistry imageRegistry;

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Robot_1000 = getElementType("org.farrusco.diagram.Robot_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Distancia_2001 = getElementType("org.farrusco.diagram.Distancia_2001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Bumpers_2002 = getElementType("org.farrusco.diagram.Bumpers_2002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Espera_2003 = getElementType("org.farrusco.diagram.Espera_2003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Motor_2004 = getElementType("org.farrusco.diagram.Motor_2004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Servo_2005 = getElementType("org.farrusco.diagram.Servo_2005");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType LED_2006 = getElementType("org.farrusco.diagram.LED_2006");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Prioridade_2007 = getElementType("org.farrusco.diagram.Prioridade_2007");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Paralelo_2008 = getElementType("org.farrusco.diagram.Paralelo_2008");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Sequencial_2009 = getElementType("org.farrusco.diagram.Sequencial_2009");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Filho_4001 = getElementType("org.farrusco.diagram.Filho_4001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Irmao_4002 = getElementType("org.farrusco.diagram.Irmao_4002");  //$NON-NLS-1$
		
		/**
 * @generated
 */
private static org.eclipse.jface.resource.ImageRegistry getImageRegistry() {
	if (imageRegistry == null) {
		imageRegistry = new org.eclipse.jface.resource.ImageRegistry();
	}
	return imageRegistry;
}

		/**
 * @generated
 */
private static String getImageRegistryKey(org.eclipse.emf.ecore.ENamedElement element) {
	return element.getName();
}

		/**
 * @generated
 */
private static org.eclipse.jface.resource.ImageDescriptor getProvidedImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	if (element instanceof org.eclipse.emf.ecore.EStructuralFeature) {
		org.eclipse.emf.ecore.EStructuralFeature feature = ((org.eclipse.emf.ecore.EStructuralFeature) element);
		org.eclipse.emf.ecore.EClass eContainingClass = feature.getEContainingClass();
		org.eclipse.emf.ecore.EClassifier eType = feature.getEType();
		if (eContainingClass != null && !eContainingClass.isAbstract()){
			element = eContainingClass;
		} else if (eType instanceof org.eclipse.emf.ecore.EClass && !((org.eclipse.emf.ecore.EClass)eType).isAbstract()){
			element = eType;
		}
	}
	if (element instanceof org.eclipse.emf.ecore.EClass) {
		org.eclipse.emf.ecore.EClass eClass = (org.eclipse.emf.ecore.EClass) element;
		if (!eClass.isAbstract()) {
			return farrusco.diagram.part.FarruscoDiagramEditorPlugin.getInstance().getItemImageDescriptor(
				eClass.getEPackage().getEFactoryInstance().create(eClass));
		}
	}
	// TODO : support structural features
	return null;
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	String key = getImageRegistryKey(element);
	org.eclipse.jface.resource.ImageDescriptor imageDescriptor = getImageRegistry().getDescriptor(key);
	if (imageDescriptor == null) {
		imageDescriptor = getProvidedImageDescriptor(element);
if (imageDescriptor == null) {
	imageDescriptor = org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor();
}
getImageRegistry().put(key, imageDescriptor);
	}
	return imageDescriptor;
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	String key = getImageRegistryKey(element);
	org.eclipse.swt.graphics.Image image = getImageRegistry().get(key);
	if (image == null) {
		org.eclipse.jface.resource.ImageDescriptor imageDescriptor = getProvidedImageDescriptor(element);
if (imageDescriptor == null) {
	imageDescriptor = org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor();
}
getImageRegistry().put(key, imageDescriptor);
		image = getImageRegistry().get(key);
	}
	return image;
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	org.eclipse.emf.ecore.ENamedElement element = getElement(hint);
if (element == null) {
	return null;
}
	return getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	org.eclipse.emf.ecore.ENamedElement element = getElement(hint);
if (element == null) {
	return null;
}
	return getImage(element);
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(Robot_1000, farrusco.FarruscoPackage.eINSTANCE.getRobot());
					
	
	elements.put(Distancia_2001, farrusco.FarruscoPackage.eINSTANCE.getDistancia());
					
	
	elements.put(Bumpers_2002, farrusco.FarruscoPackage.eINSTANCE.getBumpers());
					
	
	elements.put(Espera_2003, farrusco.FarruscoPackage.eINSTANCE.getEspera());
					
	
	elements.put(Motor_2004, farrusco.FarruscoPackage.eINSTANCE.getMotor());
					
	
	elements.put(Servo_2005, farrusco.FarruscoPackage.eINSTANCE.getServo());
					
	
	elements.put(LED_2006, farrusco.FarruscoPackage.eINSTANCE.getLED());
					
	
	elements.put(Prioridade_2007, farrusco.FarruscoPackage.eINSTANCE.getPrioridade());
					
	
	elements.put(Paralelo_2008, farrusco.FarruscoPackage.eINSTANCE.getParalelo());
					
	
	elements.put(Sequencial_2009, farrusco.FarruscoPackage.eINSTANCE.getSequencial());
							
	
	elements.put(Filho_4001, farrusco.FarruscoPackage.eINSTANCE.getFilho());
					
	
	elements.put(Irmao_4002, farrusco.FarruscoPackage.eINSTANCE.getIrmao());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(Robot_1000);
		KNOWN_ELEMENT_TYPES.add(Distancia_2001);
		KNOWN_ELEMENT_TYPES.add(Bumpers_2002);
		KNOWN_ELEMENT_TYPES.add(Espera_2003);
		KNOWN_ELEMENT_TYPES.add(Motor_2004);
		KNOWN_ELEMENT_TYPES.add(Servo_2005);
		KNOWN_ELEMENT_TYPES.add(LED_2006);
		KNOWN_ELEMENT_TYPES.add(Prioridade_2007);
		KNOWN_ELEMENT_TYPES.add(Paralelo_2008);
		KNOWN_ELEMENT_TYPES.add(Sequencial_2009);
		KNOWN_ELEMENT_TYPES.add(Filho_4001);
		KNOWN_ELEMENT_TYPES.add(Irmao_4002);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case farrusco.diagram.edit.parts.RobotEditPart.VISUAL_ID:		return Robot_1000;
	case farrusco.diagram.edit.parts.DistanciaEditPart.VISUAL_ID:		return Distancia_2001;
	case farrusco.diagram.edit.parts.BumpersEditPart.VISUAL_ID:		return Bumpers_2002;
	case farrusco.diagram.edit.parts.EsperaEditPart.VISUAL_ID:		return Espera_2003;
	case farrusco.diagram.edit.parts.MotorEditPart.VISUAL_ID:		return Motor_2004;
	case farrusco.diagram.edit.parts.ServoEditPart.VISUAL_ID:		return Servo_2005;
	case farrusco.diagram.edit.parts.LEDEditPart.VISUAL_ID:		return LED_2006;
	case farrusco.diagram.edit.parts.PrioridadeEditPart.VISUAL_ID:		return Prioridade_2007;
	case farrusco.diagram.edit.parts.ParaleloEditPart.VISUAL_ID:		return Paralelo_2008;
	case farrusco.diagram.edit.parts.SequencialEditPart.VISUAL_ID:		return Sequencial_2009;
	case farrusco.diagram.edit.parts.FilhoEditPart.VISUAL_ID:		return Filho_4001;
	case farrusco.diagram.edit.parts.IrmaoEditPart.VISUAL_ID:		return Irmao_4002;
		}
		return null;
	}

	}
