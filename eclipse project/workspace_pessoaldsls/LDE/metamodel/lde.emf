@gmf(foo="bar")
@namespace(uri="http://arduino/1.0", prefix="arduino")
package arduino;

@gmf.diagram(foo="bar")
class Robo {
  val Acao[*] temAcoes;
  val Transicoes[*] temTransicoes;
  attr String Nome;
  val Condicao[*] temCondicoes;
}

abstract class Acao {
  ref Transicoes#Acao_de_Saida Transicao_de_Entrada;
  ref Transicoes#Acao_de_Entrada Transicao_de_Saida;
}

@gmf.link(source="Acao_de_Entrada", target="Acao_de_Saida", target.decoration="filledclosedarrow", width="2")
class Transicoes {
  ref Acao#Transicao_de_Saida Acao_de_Entrada;
  ref Acao#Transicao_de_Entrada Acao_de_Saida;
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Virar_Esquerda extends Corpo {
  attr String nome = "Virar Esquerda";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Mover_Frente extends Corpo {
  attr String nome = "Mover Frente";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Mover_Tras extends Corpo {
  attr String nome = "Mover Trás";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Virar_Direita extends Corpo {
  attr String nome = "Virar Direita";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="tempo")
class Rodar_Esquerda_Tempo extends Corpo_Modificavel {
}

@gmf.node(figure="ellipse", color="64,207,255", label="tempo")
class Rodar_Direita_Tempo extends Corpo_Modificavel {
}

abstract class Acoes_Predefinidas extends Acao {
}

abstract class Acoes_Modificaveis extends Acao {
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="tempo")
class Mover_Frente_Tempo extends Corpo_Modificavel {
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="tempo")
class Mover_Tras_Tempo extends Corpo_Modificavel {
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="graus")
class Virar_para_X_Graus extends Cabeca_Modificavel {
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="nome", label.readOnly="true")
class Virar_Max_Drt extends Cabeca {
  attr String nome = "Virar Máx. Direita";
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="nome", label.readOnly="true")
class Virar_Max_Esq extends Cabeca {
  attr String nome = "Virar Máx. Esquerda";
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="nome", label.readOnly="true")
class Centrar extends Cabeca {
  attr String nome = "Centrar";
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="nome", label.readOnly="true")
class Virar_45_Esq extends Cabeca {
  attr String nome = "Virar 45 Graus Esquerda";
}

@gmf.node(figure="ellipse", border.color="255,130,253", color="255,130,253", label="nome", label.readOnly="true")
class Virar_45_Drt extends Cabeca {
  attr String nome = "Virar 45 Graus Direita";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Mover_Aleatoriamente extends Corpo {
  attr String nome = "Mover Aleatoriamente";
}

abstract class LED extends Acoes_Predefinidas {
}

abstract class Verde extends LED {
}

abstract class Tricolor extends LED {
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_LED_Verde extends Verde {
  attr String nome = "Ligar LED Verde";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Desligar_LED_Verde extends Verde {
  attr String nome = "Desligar LED Verde";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Intermitencia extends Verde {
  attr String nome = "Ligar Intermitência";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Desligar_Intermitencia extends Verde {
  attr String nome = "Desligar Intermitência";
}

abstract class Varias_Cores extends Tricolor {
}

abstract class Unica_Cor extends Tricolor {
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Cores_Policia extends Varias_Cores {
  attr String nome = "Ligar Cores Polícia";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Cores_Arco_Iris extends Varias_Cores {
  attr String nome = "Ligar Cores Arco-Íris";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Azul extends Unica_Cor {
  attr String nome = "Ligar Azul";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Verde extends Unica_Cor {
  attr String nome = "Ligar Verde";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Ligar_Vermelho extends Unica_Cor {
  attr String nome = "Ligar Vermelho";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Desligar_Cor extends Unica_Cor {
  attr String nome = "Desligar Luz";
}

@gmf.node(figure="ellipse", border.color="255,255,64", color="255,255,64", label="nome", label.readOnly="true")
class Desligar_Cores extends Varias_Cores {
  attr String nome = "Desligar Cores";
}

abstract class Acoes_Condicionais extends Acao {
  ref Condicao[1] tem;
}

@gmf.node(figure="ellipse", border.color="214,214,214", color="214,214,214", label="nome", label.readOnly="true")
class While extends Acoes_Condicionais {
  attr String nome = "While";

  @gmf.compartment
  ref Acao[1] corpo;
}

@gmf.node(figure="ellipse", border.color="214,214,214", color="214,214,214", label="nome", label.readOnly="true")
class If extends Acoes_Condicionais {
  attr String nome = "If";
  ref Acao[1] then;
}

abstract class Condicao {
}

@gmf.node(figure="ellipse", border.color="214,214,214", color="214,214,214", label="nome", label.readOnly="true")
class Bumper_Pressionado extends Condicao {
  attr String nome = "Bumper";
}

@gmf.node(figure="ellipse", border.color="214,214,214", color="214,214,214", label="distancia")
class Distancia_Infra_Vermelhos extends Condicao {
  attr int distancia;
}

abstract class Corpo extends Acoes_Predefinidas {
  attr boolean evitarObstaculo;
}

abstract class Corpo_Modificavel extends Acoes_Modificaveis {
  attr int tempo;
  attr boolean evitarObstaculo;
}

abstract class Cabeca extends Acoes_Predefinidas {
}

abstract class Cabeca_Modificavel extends Acoes_Modificaveis {
  attr int graus;
}

@gmf.node(figure="ellipse", border.color="0,255,0", color="0,255,0", label="nome", label.readOnly="true", label.icon="false")
class Inicio extends Acao {
  attr String nome = "Início";
  attr boolean evitarObstaculo;
}

@gmf.node(figure="ellipse", border.color="255,0,0", color="255,0,0", label="nome", label.readOnly="true", label.icon="false")
class Fim extends Acao {
  attr String nome = "Fim";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="nome", label.readOnly="true")
class Parar extends Corpo {
  attr String nome = "Parar";
}

@gmf.node(figure="ellipse", border.color="64,207,255", color="64,207,255", label="tempo")
class Parar_Tempo extends Corpo_Modificavel {
}

